@model MvcMovie.Models.ViewInput

@{
    ViewBag.Title = "Manage Decision Tree";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<script>
    const { placeholder } = require("modernizr");

    function createExampleTable() {
        //alert(document.getElementById("mainTable").innerHTML);
        deleteTable();
        createTable(5, 15);
        var table = document.getElementById("mainTable");
        //var a = '<input type="text" name="Fname">';
        //table.rows[0].cells[0].innerHTML = "test";
        table.rows[0].cells[0].childNodes[0].value = "Credit History";
        table.rows[0].cells[1].childNodes[0].value = "Debt";
        table.rows[0].cells[2].childNodes[0].value = "Collateral";
        table.rows[0].cells[3].childNodes[0].value = "Income";
        table.rows[0].cells[4].childNodes[0].value = "Risk";

        table.rows[1].cells[0].childNodes[0].value = "BAD";
        table.rows[1].cells[1].childNodes[0].value = "HIGH";
        table.rows[1].cells[2].childNodes[0].value = "NO";
        table.rows[1].cells[3].childNodes[0].value = "< R15k";
        table.rows[1].cells[4].childNodes[0].value = "HIGH";

        table.rows[2].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[2].cells[1].childNodes[0].value = "HIGH";
        table.rows[2].cells[2].childNodes[0].value = "NO";
        table.rows[2].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[2].cells[4].childNodes[0].value = "HIGH";

        table.rows[3].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[3].cells[1].childNodes[0].value = "LOW";
        table.rows[3].cells[2].childNodes[0].value = "NO";
        table.rows[3].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[3].cells[4].childNodes[0].value = "MEDIUM";

        table.rows[4].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[4].cells[1].childNodes[0].value = "LOW";
        table.rows[4].cells[2].childNodes[0].value = "NO";
        table.rows[4].cells[3].childNodes[0].value = "< R15k";
        table.rows[4].cells[4].childNodes[0].value = "HIGH";

        table.rows[5].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[5].cells[1].childNodes[0].value = "LOW";
        table.rows[5].cells[2].childNodes[0].value = "NO";
        table.rows[5].cells[3].childNodes[0].value = "> R35k";
        table.rows[5].cells[4].childNodes[0].value = "LOW";

        table.rows[6].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[6].cells[1].childNodes[0].value = "LOW";
        table.rows[6].cells[2].childNodes[0].value = "YES";
        table.rows[6].cells[3].childNodes[0].value = "> R35k";
        table.rows[6].cells[4].childNodes[0].value = "LOW";

        table.rows[7].cells[0].childNodes[0].value = "BAD";
        table.rows[7].cells[1].childNodes[0].value = "LOW";
        table.rows[7].cells[2].childNodes[0].value = "NO";
        table.rows[7].cells[3].childNodes[0].value = "< R15k";
        table.rows[7].cells[4].childNodes[0].value = "HIGH";

        table.rows[8].cells[0].childNodes[0].value = "BAD";
        table.rows[8].cells[1].childNodes[0].value = "LOW";
        table.rows[8].cells[2].childNodes[0].value = "YES";
        table.rows[8].cells[3].childNodes[0].value = "> R35k";
        table.rows[8].cells[4].childNodes[0].value = "MEDIUM";

        table.rows[9].cells[0].childNodes[0].value = "GOOD";
        table.rows[9].cells[1].childNodes[0].value = "LOW";
        table.rows[9].cells[2].childNodes[0].value = "NO";
        table.rows[9].cells[3].childNodes[0].value = "> R35k";
        table.rows[9].cells[4].childNodes[0].value = "LOW";

        table.rows[10].cells[0].childNodes[0].value = "GOOD";
        table.rows[10].cells[1].childNodes[0].value = "HIGH";
        table.rows[10].cells[2].childNodes[0].value = "YES";
        table.rows[10].cells[3].childNodes[0].value = "> R35k";
        table.rows[10].cells[4].childNodes[0].value = "LOW";

        table.rows[11].cells[0].childNodes[0].value = "GOOD";
        table.rows[11].cells[1].childNodes[0].value = "HIGH";
        table.rows[11].cells[2].childNodes[0].value = "NO";
        table.rows[11].cells[3].childNodes[0].value = "< R15k";
        table.rows[11].cells[4].childNodes[0].value = "HIGH";

        table.rows[12].cells[0].childNodes[0].value = "GOOD";
        table.rows[12].cells[1].childNodes[0].value = "HIGH";
        table.rows[12].cells[2].childNodes[0].value = "NO";
        table.rows[12].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[12].cells[4].childNodes[0].value = "MEDIUM";

        table.rows[13].cells[0].childNodes[0].value = "GOOD";
        table.rows[13].cells[1].childNodes[0].value = "HIGH";
        table.rows[13].cells[2].childNodes[0].value = "NO";
        table.rows[13].cells[3].childNodes[0].value = "> R35k";
        table.rows[13].cells[4].childNodes[0].value = "LOW";

        table.rows[14].cells[0].childNodes[0].value = "BAD";
        table.rows[14].cells[1].childNodes[0].value = "HIGH";
        table.rows[14].cells[2].childNodes[0].value = "NO";
        table.rows[14].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[14].cells[4].childNodes[0].value = "HIGH";
    }

    function renewTable() {
        columns = document.getElementById("columns").value;
        rows = document.getElementById("rows").value;
        deleteTable();
        createTable(columns, rows);
    }

    function deleteTable() {
        var tableHeaderRowCount = 0;
        var table = document.getElementById('mainTable');
        var rowCount = table.rows.length;
        for (var i = tableHeaderRowCount; i < rowCount; i++) {
            table.deleteRow(tableHeaderRowCount);
        }
        var elem = document.getElementById("mainTable");
        elem.parentNode.removeChild(elem);
    }

    function createTable(columns, rows) {
        var body = document.getElementById("placeholder");
        tbl = document.createElement('table');
        tbl.id = 'mainTable';
        for (var i = 0; i < rows; i++) {
            var tr = tbl.insertRow();
            for (var j = 0; j < columns; j++) {
                var td = tr.insertCell();
                var input = document.createElement("input");
                //var index = i * j;
                //var input = document.createElement(    @*@Html.TextBoxFor(m => m.cells[0])*@    );
                input.type = "text";
                td.appendChild(input);
                //td.style.border = '1px solid black';
            }
        }
        body.appendChild(tbl);
    }

</script>

<ol>
    <li>Specify the number of rows and columns in the dataset (maximum rows = 100; maximum columns = 10)</li>
    <li>Populate the dataset</li>
    <li>Click create decision tree to build the decision tree</li>
    <li>Create a new data entry and click calculate outcome</li>
</ol>

@using (Html.BeginForm("Sizing", "Home", FormMethod.Post))//(Action Name, Controller Name, FormMethod) Another form of this without using Razor is: <form method="post" action="/Home/UpdateInts">
{
    <label for="fname">Columns:</label>
    @Html.TextBoxFor(m => m.columns)
    <label for="lname">Rows:</label>
    @Html.TextBoxFor(m => m.rows)
    <div>
        <p><button type="submit">Clear and Resize table</button></p>
    </div>
}
    <div>
        <p><button type="button" onclick="createExampleTable()">Example dataset</button></p>
    </div>

    <div id="placeholder">

    </div>

    @using (Html.BeginForm("DecisionTree", "Home", FormMethod.Post))//(Action Name, Controller Name, FormMethod) Another form of this without using Razor is: <form method="post" action="/Home/UpdateInts">
    {



        <table id="mainTable">
            @for (var i = 0; i < Model.cells.Count(); i++)
            {
                <tr>
                    @for (var j = 0; j < Model.cells[i].Count(); j++)
                    {
                        <td>
                            @Html.TextBoxFor(m => m.cells[i][j])
                        </td>
                    }
                </tr>
            }
            @*<tr>
                    <td>@Html.TextBoxFor(m => m.cells[0])</td>
                    <td>@Html.TextBoxFor(m => m.cells[1])</td>
                    <td>@Html.TextBoxFor(m => m.cells[2])</td>
                    <td>@Html.TextBoxFor(m => m.cells[3])</td>
                    <td>@Html.TextBoxFor(m => m.cells[4])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[5])</td>
                    <td>@Html.TextBoxFor(m => m.cells[6])</td>
                    <td>@Html.TextBoxFor(m => m.cells[7])</td>
                    <td>@Html.TextBoxFor(m => m.cells[8])</td>
                    <td>@Html.TextBoxFor(m => m.cells[9])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[10])</td>
                    <td>@Html.TextBoxFor(m => m.cells[11])</td>
                    <td>@Html.TextBoxFor(m => m.cells[12])</td>
                    <td>@Html.TextBoxFor(m => m.cells[13])</td>
                    <td>@Html.TextBoxFor(m => m.cells[14])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[15])</td>
                    <td>@Html.TextBoxFor(m => m.cells[16])</td>
                    <td>@Html.TextBoxFor(m => m.cells[17])</td>
                    <td>@Html.TextBoxFor(m => m.cells[18])</td>
                    <td>@Html.TextBoxFor(m => m.cells[19])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[20])</td>
                    <td>@Html.TextBoxFor(m => m.cells[21])</td>
                    <td>@Html.TextBoxFor(m => m.cells[22])</td>
                    <td>@Html.TextBoxFor(m => m.cells[23])</td>
                    <td>@Html.TextBoxFor(m => m.cells[24])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[25])</td>
                    <td>@Html.TextBoxFor(m => m.cells[26])</td>
                    <td>@Html.TextBoxFor(m => m.cells[27])</td>
                    <td>@Html.TextBoxFor(m => m.cells[28])</td>
                    <td>@Html.TextBoxFor(m => m.cells[29])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[30])</td>
                    <td>@Html.TextBoxFor(m => m.cells[31])</td>
                    <td>@Html.TextBoxFor(m => m.cells[32])</td>
                    <td>@Html.TextBoxFor(m => m.cells[33])</td>
                    <td>@Html.TextBoxFor(m => m.cells[34])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[35])</td>
                    <td>@Html.TextBoxFor(m => m.cells[36])</td>
                    <td>@Html.TextBoxFor(m => m.cells[37])</td>
                    <td>@Html.TextBoxFor(m => m.cells[38])</td>
                    <td>@Html.TextBoxFor(m => m.cells[39])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[40])</td>
                    <td>@Html.TextBoxFor(m => m.cells[41])</td>
                    <td>@Html.TextBoxFor(m => m.cells[42])</td>
                    <td>@Html.TextBoxFor(m => m.cells[43])</td>
                    <td>@Html.TextBoxFor(m => m.cells[44])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[45])</td>
                    <td>@Html.TextBoxFor(m => m.cells[46])</td>
                    <td>@Html.TextBoxFor(m => m.cells[47])</td>
                    <td>@Html.TextBoxFor(m => m.cells[48])</td>
                    <td>@Html.TextBoxFor(m => m.cells[49])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[50])</td>
                    <td>@Html.TextBoxFor(m => m.cells[51])</td>
                    <td>@Html.TextBoxFor(m => m.cells[52])</td>
                    <td>@Html.TextBoxFor(m => m.cells[53])</td>
                    <td>@Html.TextBoxFor(m => m.cells[54])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[55])</td>
                    <td>@Html.TextBoxFor(m => m.cells[56])</td>
                    <td>@Html.TextBoxFor(m => m.cells[57])</td>
                    <td>@Html.TextBoxFor(m => m.cells[58])</td>
                    <td>@Html.TextBoxFor(m => m.cells[59])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[60])</td>
                    <td>@Html.TextBoxFor(m => m.cells[61])</td>
                    <td>@Html.TextBoxFor(m => m.cells[62])</td>
                    <td>@Html.TextBoxFor(m => m.cells[63])</td>
                    <td>@Html.TextBoxFor(m => m.cells[64])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[65])</td>
                    <td>@Html.TextBoxFor(m => m.cells[66])</td>
                    <td>@Html.TextBoxFor(m => m.cells[67])</td>
                    <td>@Html.TextBoxFor(m => m.cells[68])</td>
                    <td>@Html.TextBoxFor(m => m.cells[69])</td>
                </tr>
                <tr>
                    <td>@Html.TextBoxFor(m => m.cells[70])</td>
                    <td>@Html.TextBoxFor(m => m.cells[71])</td>
                    <td>@Html.TextBoxFor(m => m.cells[72])</td>
                    <td>@Html.TextBoxFor(m => m.cells[73])</td>
                    <td>@Html.TextBoxFor(m => m.cells[74])</td>
                </tr>*@
        </table>

        <div>
            <br><input type="submit" name="submit" class="btn btn-danger" value="Generate Decision Tree" />
        </div>

    }
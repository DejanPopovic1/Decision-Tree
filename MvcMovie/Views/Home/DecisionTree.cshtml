@model MvcMovie.Models.ViewInput

@{
    ViewBag.Title = "Manage Decision Tree";
}
<h2>@ViewBag.Title.</h2>
<h3>@ViewBag.Message</h3>

<script>
    const { placeholder } = require("modernizr");

    function createExampleTable() {
        //alert(document.getElementById("mainTable").innerHTML);
        deleteTable();
        createTable(5, 15);
        var table = document.getElementById("mainTable");
        //var a = '<input type="text" name="Fname">';
        //table.rows[0].cells[0].innerHTML = "test";
        table.rows[0].cells[0].childNodes[0].value = "Credit History";
        table.rows[0].cells[1].childNodes[0].value = "Debt";
        table.rows[0].cells[2].childNodes[0].value = "Collateral";
        table.rows[0].cells[3].childNodes[0].value = "Income";
        table.rows[0].cells[4].childNodes[0].value = "Risk";

        table.rows[1].cells[0].childNodes[0].value = "BAD";
        table.rows[1].cells[1].childNodes[0].value = "HIGH";
        table.rows[1].cells[2].childNodes[0].value = "NO";
        table.rows[1].cells[3].childNodes[0].value = "< R15k";
        table.rows[1].cells[4].childNodes[0].value = "HIGH";

        table.rows[2].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[2].cells[1].childNodes[0].value = "HIGH";
        table.rows[2].cells[2].childNodes[0].value = "NO";
        table.rows[2].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[2].cells[4].childNodes[0].value = "HIGH";

        table.rows[3].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[3].cells[1].childNodes[0].value = "LOW";
        table.rows[3].cells[2].childNodes[0].value = "NO";
        table.rows[3].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[3].cells[4].childNodes[0].value = "MEDIUM";

        table.rows[4].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[4].cells[1].childNodes[0].value = "LOW";
        table.rows[4].cells[2].childNodes[0].value = "NO";
        table.rows[4].cells[3].childNodes[0].value = "< R15k";
        table.rows[4].cells[4].childNodes[0].value = "HIGH";

        table.rows[5].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[5].cells[1].childNodes[0].value = "LOW";
        table.rows[5].cells[2].childNodes[0].value = "NO";
        table.rows[5].cells[3].childNodes[0].value = "> R35k";
        table.rows[5].cells[4].childNodes[0].value = "LOW";

        table.rows[6].cells[0].childNodes[0].value = "UNKNOWN";
        table.rows[6].cells[1].childNodes[0].value = "LOW";
        table.rows[6].cells[2].childNodes[0].value = "YES";
        table.rows[6].cells[3].childNodes[0].value = "> R35k";
        table.rows[6].cells[4].childNodes[0].value = "LOW";

        table.rows[7].cells[0].childNodes[0].value = "BAD";
        table.rows[7].cells[1].childNodes[0].value = "LOW";
        table.rows[7].cells[2].childNodes[0].value = "NO";
        table.rows[7].cells[3].childNodes[0].value = "< R15k";
        table.rows[7].cells[4].childNodes[0].value = "HIGH";

        table.rows[8].cells[0].childNodes[0].value = "BAD";
        table.rows[8].cells[1].childNodes[0].value = "LOW";
        table.rows[8].cells[2].childNodes[0].value = "YES";
        table.rows[8].cells[3].childNodes[0].value = "> R35k";
        table.rows[8].cells[4].childNodes[0].value = "MEDIUM";

        table.rows[9].cells[0].childNodes[0].value = "GOOD";
        table.rows[9].cells[1].childNodes[0].value = "LOW";
        table.rows[9].cells[2].childNodes[0].value = "NO";
        table.rows[9].cells[3].childNodes[0].value = "> R35k";
        table.rows[9].cells[4].childNodes[0].value = "LOW";

        table.rows[10].cells[0].childNodes[0].value = "GOOD";
        table.rows[10].cells[1].childNodes[0].value = "HIGH";
        table.rows[10].cells[2].childNodes[0].value = "YES";
        table.rows[10].cells[3].childNodes[0].value = "> R35k";
        table.rows[10].cells[4].childNodes[0].value = "LOW";

        table.rows[11].cells[0].childNodes[0].value = "GOOD";
        table.rows[11].cells[1].childNodes[0].value = "HIGH";
        table.rows[11].cells[2].childNodes[0].value = "NO";
        table.rows[11].cells[3].childNodes[0].value = "< R15k";
        table.rows[11].cells[4].childNodes[0].value = "HIGH";

        table.rows[12].cells[0].childNodes[0].value = "GOOD";
        table.rows[12].cells[1].childNodes[0].value = "HIGH";
        table.rows[12].cells[2].childNodes[0].value = "NO";
        table.rows[12].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[12].cells[4].childNodes[0].value = "MEDIUM";

        table.rows[13].cells[0].childNodes[0].value = "GOOD";
        table.rows[13].cells[1].childNodes[0].value = "HIGH";
        table.rows[13].cells[2].childNodes[0].value = "NO";
        table.rows[13].cells[3].childNodes[0].value = "> R35k";
        table.rows[13].cells[4].childNodes[0].value = "LOW";

        table.rows[14].cells[0].childNodes[0].value = "BAD";
        table.rows[14].cells[1].childNodes[0].value = "HIGH";
        table.rows[14].cells[2].childNodes[0].value = "NO";
        table.rows[14].cells[3].childNodes[0].value = "R15k - R35k";
        table.rows[14].cells[4].childNodes[0].value = "HIGH";
    }

    function renewTable() {
        columns = document.getElementById("columns").value;
        rows = document.getElementById("rows").value;
        deleteTable();
        createTable(columns, rows);
    }

    function deleteTable() {
        var tableHeaderRowCount = 0;
        var table = document.getElementById('mainTable');
        var rowCount = table.rows.length;
        for (var i = tableHeaderRowCount; i < rowCount; i++) {
            table.deleteRow(tableHeaderRowCount);
        }
        var elem = document.getElementById("mainTable");
        elem.parentNode.removeChild(elem);
    }

    function createTable(columns, rows) {
        var body = document.getElementById("placeholder");
        tbl = document.createElement('table');
        tbl.id = 'mainTable';
        for (var i = 0; i < rows; i++) {
            var tr = tbl.insertRow();
            for (var j = 0; j < columns; j++) {
                var td = tr.insertCell();
                var input = document.createElement("input");
                //var index = i * j;
                //var input = document.createElement(    @*@Html.TextBoxFor(m => m.cells[0])*@    );
                input.type = "text";
                td.appendChild(input);
                //td.style.border = '1px solid black';
            }
        }
        body.appendChild(tbl);
    }

</script>

<ol>
    <li>Specify the number of rows and columns in the dataset (maximum rows = 100; maximum columns = 10)</li>
    <li>Populate the dataset</li>
    <li>Click create decision tree to build the decision tree</li>
    <li>Create a new data entry and click calculate outcome</li>
</ol>

@using (Html.BeginForm("Sizing", "Home", FormMethod.Post))//(Action Name, Controller Name, FormMethod) Another form of this without using Razor is: <form method="post" action="/Home/UpdateInts">
{
    <p>
        <label for="fname">Columns:</label>
        @Html.TextBoxFor(m => m.columns)
        <label for="lname">Rows:</label>
        @Html.TextBoxFor(m => m.rows)
    </p>
    <div>
        <p><button type="submit">Clear and Resize table</button></p>
    </div>
}

@*Comment: Example using a controller that as the arguments: (ViewInput vi)
    <form method="post" action="/Home/Sizing">
        <input type="text" name="vi.columns" value="" />
        <input type="text" name="vi.rows" value="" />
        <input type="submit" />
    </form>*@

@*Comment: Example using a controller that as the arguments: (int columns, int rows))
        <form method="post" action="/Home/Sizing">
        <input type="text" name="columns" value="2" />
        <input type="text" name="rows" value="2" />
        <input type="submit" />
    </form>*@

@*For more complex types, see: http://haacked.com/archive/2008/10/23/model-binding-to-a-list.aspx/*@

@using (Html.BeginForm("ExampleDataSet", "Home", FormMethod.Post))
{
    <div>
        @*<p><button type="button" onclick="createExampleTable()">Example dataset</button></p>*@
        <p><button type="submit">Example dataset</button></p>
    </div>
}


<div id="placeholder">

</div>

@using (Html.BeginForm("GenerateDecisionTree", "Home", FormMethod.Post))//(Action Name, Controller Name, FormMethod) Another form of this without using Razor is: <form method="post" action="/Home/UpdateInts">
{
    <p>
        <table id="mainTable">

            @for (var i = 0; i < Model.cells.Count(); i++)
            {
                <tr>
                    @for (var j = 0; j < Model.cells[i].Count(); j++)
                    {
                        <td>
                            @Html.TextBoxFor(m => m.cells[i][j])
                        </td>
                    }
                </tr>
            }
        </table>

        </p>

    <!--<p><div>
        <br><button type="submit" name="command" value="submit1">Generate Decision Tree</button>-->
        @*<br><input type="submit" name="submit1" class="btn btn-danger" value="Generate Decision Tree" />*@
    <!--</div>
    </p>-->

    <p>
    <div>
        @*<p><button type="button" onclick="createExampleTable()">Example dataset</button></p>*@
        <p><button type="submit" name="command" value="submit1">Provide Input Conditions</button></p>
    </div>
    </p>


<label>Conditions:</label>

if (Model.inputConditionsSelected)
{
    <p>
        <table id="conditionTable">
            @*Headings*@
            <tr>
                @for (var i = 0; i < Model.cells[0].Count() - 1; i++)
                {
                    if (Model.cells.Count == 0)
                    {
                        continue;
                    }
                    <td>
                        @Html.TextBoxFor(m => m.cells[0][i], new { disabled = "disabled", @readonly = "readonly" })
                    </td>
                }
            </tr>
            @*Conditions*@
            <tr>
                @for (var i = 0; i < Model.cells[0].Count() - 1; i++)
                {
                    <td>
                        @Html.TextBoxFor(m => m.conditions[i])
                    </td>
                }
            </tr>

        </table>
    </p>
}

<div>
    <p>
        <label>Result:</label>
        @Html.TextBoxFor(m => m.result, new { disabled = "disabled" })
    </p>
</div>

    <p>
    <div>
        @*<p><button type="button" onclick="createExampleTable()">Example dataset</button></p>*@
        <p><button type="submit" name="command" value="submit2">Calculate Result</button></p>
    </div>
    </p>
}